<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="28" passed="28">
  <reporter-output>
  </reporter-output>
  <suite name="Surefire suite" duration-ms="151" started-at="2021-04-01T11:45:43Z" finished-at="2021-04-01T11:45:43Z">
    <groups>
    </groups>
    <test name="Surefire test" duration-ms="151" started-at="2021-04-01T11:45:43Z" finished-at="2021-04-01T11:45:43Z">
      <class name="com.assignment.calculator.examination_calculator.MainTest">
        <test-method status="PASS" signature="testBasicCalculator()[pri:0, instance:testBasicCalculator(com.assignment.calculator.examination_calculator.MainTest)]" name="testBasicCalculator" duration-ms="0" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBasicCalculator -->
        <test-method status="PASS" signature="testAdvancedCalculator()[pri:0, instance:testAdvancedCalculator(com.assignment.calculator.examination_calculator.MainTest)]" name="testAdvancedCalculator" duration-ms="0" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdvancedCalculator -->
      </class> <!-- com.assignment.calculator.examination_calculator.MainTest -->
      <class name="com.assignment.calculator.examination_calculator.BasicCalculatorTest">
        <test-method status="PASS" signature="testMultiplicationZero()[pri:0, instance:testMultiplicationZero(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testMultiplicationZero" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplicationZero -->
        <test-method status="PASS" signature="testAdditionPositive()[pri:0, instance:testAdditionPositive(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testAdditionPositive" duration-ms="5" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionPositive -->
        <test-method status="PASS" signature="testAdditionNegative()[pri:0, instance:testAdditionNegative(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testAdditionNegative" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionNegative -->
        <test-method status="PASS" signature="testDivisionZero()[pri:0, instance:testDivisionZero(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testDivisionZero" duration-ms="2" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivisionZero -->
        <test-method status="PASS" signature="testMultiplicationPositive()[pri:0, instance:testMultiplicationPositive(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testMultiplicationPositive" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplicationPositive -->
        <test-method status="PASS" signature="testDivisionPositive()[pri:0, instance:testDivisionPositive(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testDivisionPositive" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivisionPositive -->
        <test-method status="PASS" signature="testMultiplicationNegative()[pri:0, instance:testMultiplicationNegative(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testMultiplicationNegative" duration-ms="2" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplicationNegative -->
        <test-method status="PASS" signature="testDivisionNegative()[pri:0, instance:testDivisionNegative(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testDivisionNegative" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivisionNegative -->
        <test-method status="PASS" signature="testAdditionZero()[pri:0, instance:testAdditionZero(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testAdditionZero" duration-ms="0" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionZero -->
        <test-method status="PASS" signature="testSubtractionZero()[pri:0, instance:testSubtractionZero(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testSubtractionZero" duration-ms="0" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubtractionZero -->
        <test-method status="PASS" signature="testSubtractionPositive()[pri:0, instance:testSubtractionPositive(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testSubtractionPositive" duration-ms="4" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubtractionPositive -->
        <test-method status="PASS" signature="testSubtractionNegative()[pri:0, instance:testSubtractionNegative(com.assignment.calculator.examination_calculator.BasicCalculatorTest)]" name="testSubtractionNegative" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubtractionNegative -->
      </class> <!-- com.assignment.calculator.examination_calculator.BasicCalculatorTest -->
      <class name="com.assignment.calculator.examination_calculator.AdvancedCalculatorTest">
        <test-method status="PASS" signature="testRaisedToThePowerOfZero()[pri:0, instance:testRaisedToThePowerOfZero(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testRaisedToThePowerOfZero" duration-ms="4" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaisedToThePowerOfZero -->
        <test-method status="PASS" signature="testSquareRootZero()[pri:0, instance:testSquareRootZero(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testSquareRootZero" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSquareRootZero -->
        <test-method status="PASS" signature="testSquareRootPositive()[pri:0, instance:testSquareRootPositive(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testSquareRootPositive" duration-ms="2" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSquareRootPositive -->
        <test-method status="PASS" signature="testModulusZero()[pri:0, instance:testModulusZero(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testModulusZero" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModulusZero -->
        <test-method status="PASS" signature="testSquareNegative()[pri:0, instance:testSquareNegative(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testSquareNegative" duration-ms="4" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSquareNegative -->
        <test-method status="PASS" signature="testSquarePositive()[pri:0, instance:testSquarePositive(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testSquarePositive" duration-ms="0" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSquarePositive -->
        <test-method status="PASS" signature="testAbsoluteValueZero()[pri:0, instance:testAbsoluteValueZero(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testAbsoluteValueZero" duration-ms="0" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsoluteValueZero -->
        <test-method status="PASS" signature="testModulusPositive()[pri:0, instance:testModulusPositive(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testModulusPositive" duration-ms="6" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModulusPositive -->
        <test-method status="PASS" signature="testModulusNegative()[pri:0, instance:testModulusNegative(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testModulusNegative" duration-ms="3" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testModulusNegative -->
        <test-method status="PASS" signature="testAbsoluteValuePositive()[pri:0, instance:testAbsoluteValuePositive(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testAbsoluteValuePositive" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsoluteValuePositive -->
        <test-method status="PASS" signature="testAbsoluteValueNegative()[pri:0, instance:testAbsoluteValueNegative(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testAbsoluteValueNegative" duration-ms="3" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAbsoluteValueNegative -->
        <test-method status="PASS" signature="testSquareZero()[pri:0, instance:testSquareZero(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testSquareZero" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSquareZero -->
        <test-method status="PASS" signature="testRaisedToThePowerOfPositive()[pri:0, instance:testRaisedToThePowerOfPositive(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testRaisedToThePowerOfPositive" duration-ms="1" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaisedToThePowerOfPositive -->
        <test-method status="PASS" signature="testRaisedToThePowerOfNegative()[pri:0, instance:testRaisedToThePowerOfNegative(com.assignment.calculator.examination_calculator.AdvancedCalculatorTest)]" name="testRaisedToThePowerOfNegative" duration-ms="2" started-at="2021-04-01T13:45:43Z" finished-at="2021-04-01T13:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRaisedToThePowerOfNegative -->
      </class> <!-- com.assignment.calculator.examination_calculator.AdvancedCalculatorTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
